## ゲーム制作用ツールガイド

ゲーム制作用に制作したツールをこのフォルダにまとめました。それぞれの概要と役割を以下に記載しています。

### ツール一覧

1. **音源をバイナリデータにするスクリプト（必須ツール）**  
   音源ファイルをバイナリデータ形式に変換するスクリプトです。  
   ゲーム内で音声データを扱う際に使用します。

2. **バイナリデータ音源再生スクリプト**  
   作成したバイナリデータ形式の音源を再生し、確認するためのスクリプトです。  
   動作確認に使用しました。(使い方はコードにあります)

3. **ファイル置換スクリプト**  
   フォルダ内のファイル名に含まれる共通の語句を一括で置き換えるスクリプトです。  
   大量のファイル名やファイル名の一部を一度に置換できます。(使い方はコードにあります)

---

# 音源ファイルをバイナリ形式に変換するスクリプトの使い方

このスクリプトは、指定したフォルダ内の音源ファイル（`.mp3`、`.wav`、`.ogg`形式）をバイナリ形式に変換し、別のフォルダに保存します。

---

## 準備

   **フォルダ構成**  
   スクリプトを配置するディレクトリは以下のように構成してください：

   ```
   プロジェクトフォルダ/
   ├── 音源ファイルをバイナリ形式に変換するスクリプト.py               # このスクリプトファイル
   ├── audio/                  # 音楽ファイルを格納するフォルダ
   │   ├── example1.mp3
   │   ├── example2.wav
   ├── sound_effects/          # 効果音ファイルを格納するフォルダ
   │   ├── effect1.ogg
   │   ├── effect2.wav
   ├── binary_audio/           # バイナリデータ保存用フォルダ（自動生成されます）
   ├── binary_sound_effects/   # バイナリデータ保存用フォルダ（自動生成されます）
   ```

   - **`audio/`** フォルダに変換したい音楽ファイルを入れてください。
   - **`sound_effects/`** フォルダに変換したい効果音ファイルを入れてください。

---

## 実行手順

1. **スクリプトの実行**  
   ターミナルやコマンドプロンプトを開き、スクリプトがあるフォルダに移動して以下を実行します：

   ```bash
   python 音源ファイルをバイナリ形式に変換するスクリプト.py
   ```

2. **変換結果**  
   - **`binary_audio/`** フォルダに、音楽ファイルのバイナリデータ（例: `example1.mp3.bin`）が保存されます。
   - **`binary_sound_effects/`** フォルダに、効果音ファイルのバイナリデータ（例: `effect1.ogg.bin`）が保存されます。

---

## 注意点

- 音源ファイルは `.mp3`、`.wav`、`.ogg` のみ対応しています。
- フォルダ内の他の形式のファイルは無視されます。
- 変換結果は元のファイルと同じ名前+元の拡張子がファイル名変わり、拡張子が `.bin` に変わります。

---

## ファイル構成例

### 元のファイル
```
audio/
├── song1.mp3
├── song2.wav
sound_effects/
├── effect1.ogg
├── effect2.wav
```

### 実行後の結果
```
binary_audio/
├── song1.mp3.bin
├── song2.wav.bin
binary_sound_effects/
├── effect1.ogg.bin
├── effect2.wav.bin
```

